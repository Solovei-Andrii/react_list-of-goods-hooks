{"version":3,"sources":["Components/Button.tsx","App.tsx","index.tsx"],"names":["Button","title","classOfTitle","sortFunction","type","className","onClick","goodsFromServer","SORT_BY_ALPHABETICALLY","SORT_BY_LENGTH","SORT_BY_REVERSE","getPreparedGood","goods","sortField","isReversed","visibleGoods","sort","good1","good2","localeCompare","length","reverse","App","useState","setSortField","setVisibleGoods","setIsReversed","cn","JSON","stringify","map","good","ReactDOM","render","document","getElementById"],"mappings":"uPAQaA,EAA0B,SAAC,GAEjC,IADLC,EACI,EADJA,MAAOC,EACH,EADGA,aAAcC,EACjB,EADiBA,aAErB,OACE,mCACE,wBACEC,KAAK,SACLC,UAAWH,EACXI,QAASH,EAHX,SAKGF,OCZIM,EAA4B,CACvC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAyB,WACzBC,EAAiB,SACjBC,EAAkB,aAExB,SAASC,EACPC,EACAC,EACAC,GAEA,IAAMC,EAAY,YAAOH,GAEzB,GAAIC,EACF,OAAQA,GACN,KAAKL,EACCM,EACFC,EAAaC,MAAK,SAACC,EAAOC,GAAR,OAAkBA,EAAMC,cAAcF,MAExDF,EAAaC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MAG1D,MACF,KAAKT,EACCK,EACFC,EAAaC,MAAK,SAACC,EAAOC,GAAR,OAChBA,EAAME,OAASH,EAAMG,UAEvBL,EAAaC,MAAK,SAACC,EAAOC,GAAR,OAChBD,EAAMG,OAASF,EAAME,UAa/B,OAJIP,IAAcH,GAChBK,EAAaM,UAGRN,EAGF,IAAMO,EAAgB,WAC3B,MAAkCC,mBAAS,IAA3C,mBAAOV,EAAP,KAAkBW,EAAlB,KACA,EAAwCD,mBAAShB,GAAjD,mBAAOQ,EAAP,KAAqBU,EAArB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOT,EAAP,KAAmBY,EAAnB,KA6BA,OACE,sBAAKrB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,cAAC,EAAD,CACEJ,MAAM,sBACNC,aAAcyB,IAAG,iBAAkB,CACjC,WAAYd,IAAcL,IAE5BL,aAnCoB,WAC1BqB,EAAahB,GACbiB,EACEd,EAAgBI,EAAcP,EAAwBM,OAkCpD,cAAC,EAAD,CACEb,MAAM,iBACNC,aAAcyB,IAAG,oBAAqB,CACpC,WAAYd,IAAcJ,IAE5BN,aAnCa,WACnBqB,EAAaf,GACbgB,EACEd,EAAgBI,EAAcN,EAAgBK,OAkC5C,cAAC,EAAD,CACEb,MAAM,UACNC,aAAcyB,IAAG,oBAAqB,CACpC,YAAab,IAEfX,aAnCc,WACpBuB,GAAeZ,GACfW,EACEd,EAAgBI,EAAcL,GAAkBI,OAkC7Cc,KAAKC,UAAUd,KACVa,KAAKC,UAAUtB,IACnB,cAAC,EAAD,CACEN,MAAM,QACNC,aAAcyB,IAAG,mBAAoB,CACnC,WAA0B,KAAdd,IAEdV,aArCS,WACjBqB,EAAa,IACbC,EAAgBlB,GAChBmB,GAAc,SAuCZ,6BAEIX,EAAae,KAAI,SAAAC,GAAI,OACnB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCpInBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.643b6d2d.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  title: string,\n  classOfTitle: string,\n  sortFunction: () => void,\n}\n\nexport const Button: React.FC<Props> = ({\n  title, classOfTitle, sortFunction,\n}) => {\n  return (\n    <>\n      <button\n        type=\"button\"\n        className={classOfTitle}\n        onClick={sortFunction}\n      >\n        {title}\n      </button>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { Button } from './Components/Button';\n\nexport const goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALPHABETICALLY = 'alphabet';\nconst SORT_BY_LENGTH = 'length';\nconst SORT_BY_REVERSE = 'isReversed';\n\nfunction getPreparedGood(\n  goods: string[],\n  sortField: string,\n  isReversed: boolean,\n): string[] {\n  const visibleGoods = [...goods];\n\n  if (sortField) {\n    switch (sortField) {\n      case SORT_BY_ALPHABETICALLY:\n        if (isReversed) {\n          visibleGoods.sort((good1, good2) => good2.localeCompare(good1));\n        } else {\n          visibleGoods.sort((good1, good2) => good1.localeCompare(good2));\n        }\n\n        break;\n      case SORT_BY_LENGTH:\n        if (isReversed) {\n          visibleGoods.sort((good1, good2) => (\n            good2.length - good1.length));\n        } else {\n          visibleGoods.sort((good1, good2) => (\n            good1.length - good2.length));\n        }\n\n        break;\n      default:\n        break;\n    }\n  }\n\n  if (sortField === SORT_BY_REVERSE) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState('');\n  const [visibleGoods, setVisibleGoods] = useState(goodsFromServer);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const sortByAlphabeticaly = () => {\n    setSortField(SORT_BY_ALPHABETICALLY);\n    setVisibleGoods(\n      getPreparedGood(visibleGoods, SORT_BY_ALPHABETICALLY, isReversed),\n    );\n  };\n\n  const sortByLength = () => {\n    setSortField(SORT_BY_LENGTH);\n    setVisibleGoods(\n      getPreparedGood(visibleGoods, SORT_BY_LENGTH, isReversed),\n    );\n  };\n\n  const sortByReverse = () => {\n    setIsReversed(!isReversed);\n    setVisibleGoods(\n      getPreparedGood(visibleGoods, SORT_BY_REVERSE, !isReversed),\n    );\n  };\n\n  const resetGoods = () => {\n    setSortField('');\n    setVisibleGoods(goodsFromServer);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <Button\n          title=\"Sort alphabetically\"\n          classOfTitle={cn('button is-info', {\n            'is-light': sortField !== SORT_BY_ALPHABETICALLY,\n          })}\n          sortFunction={sortByAlphabeticaly}\n        />\n        <Button\n          title=\"Sort by length\"\n          classOfTitle={cn('button is-success', {\n            'is-light': sortField !== SORT_BY_LENGTH,\n          })}\n          sortFunction={sortByLength}\n        />\n        <Button\n          title=\"Reverse\"\n          classOfTitle={cn('button is-warning', {\n            'is-light': !isReversed,\n          })}\n          sortFunction={sortByReverse}\n        />\n        {JSON.stringify(visibleGoods)\n          !== JSON.stringify(goodsFromServer) && (\n          <Button\n            title=\"Reset\"\n            classOfTitle={cn('button is-danger', {\n              'is-light': sortField !== '',\n            })}\n            sortFunction={resetGoods}\n          />\n        )}\n      </div>\n\n      <ul>\n        {\n          visibleGoods.map(good => (\n            <li\n              data-cy=\"Good\"\n              key={good}\n            >\n              {good}\n            </li>\n          ))\n        }\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}